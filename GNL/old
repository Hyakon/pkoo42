

/* int		get_next_line(const int fd, char **line)
{
	char buf[BUFF_SIZE + 1];
	static char *tmp = NULL;
	static int i = 0;
	int j;

	j = 0;
	if (tmp)
	{
		j = i;
		while (tmp[i] != '\n' && tmp[i] != '\0')
		{
			i++;
		}
		i++;
		*line = ft_strsub(tmp, j, i - j -1);
		if (tmp[i] == '\0')
		{
			free(tmp);
			return (0);
		}
		return (1);
	}

	while ((j = read(fd, buf, BUFF_SIZE)) != 0)
	{
		if (j < 0)
			return (j);
		buf[j] = '\0';
		if (tmp == NULL)
			tmp = ft_strdup(buf);
 		else
		{
			*line = tmp;
			tmp = ft_strjoin(tmp, buf);
			free(*line);
		}
	}

	if (tmp)
	{
		j = i;
		while (tmp[i] != '\n' && tmp[i] != '\0')
		{
			i++;
		}
		i++;
		*line = ft_strsub(tmp, j,  i - j -1);
		if (tmp[i] == '\0')
		{
			free(tmp);
			return (0);
		}
		return (1);
	}
	return (0);
}

int		get_next_line(const int fd, char **line)
{
	static char *str;
	char buf[BUFF_SIZE];
	char *tmp;
	int i;

	tmp = NULL;
	i = 0;
 	while (!str[i])
	{
		i++;
	}
	while (i = read(fd, buf, BUFF_SIZE))
	{
		if (i < 0)
			return (-1);
		//ft_putstr(buf);
		if (*line == NULL)
			*line = ft_strdup(buf);
		else
			*line = ft_strjoin(line, buf);
	}
	return (1);
}*/