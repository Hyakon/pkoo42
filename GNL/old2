/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   get_next_line.c                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: pkoo <marvin@42.fr>                        +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2018/11/28 16:39:49 by pkoo              #+#    #+#             */
/*   Updated: 2018/12/03 16:31:01 by pkoo             ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */


#include "get_next_line.h"
#include <stdio.h>


static int iscn(char *s)
{
	int i;

	i = 0;
	while(*s)
	{

		if (*s == '\n')
			return (i);
		//write(1, s,1);
		i++;
		s++;
	}
 	//ft_putchar('a');
	return (-1);
}

int		get_next_line(const int fd, char **line)
{
	char buf[BUFF_SIZE + 1];
	static char *overflow = NULL;
	char *tmp;
	int i;
	int j;


	i = 0;
 	tmp = overflow;
	while ((j = read(fd, buf, BUFF_SIZE)) != 0)
	{
		buf[j] = '\0';
		if (j < 0)
			return (j);
		if (tmp == NULL)
		{
				write(1, "a",1);
			tmp = ft_strdup(buf);
		}
 		else
		{

			*line = tmp;
			tmp = ft_strjoin(tmp, buf);

//	ft_putendl(buf);
			free(*line);
		}
		i = iscn(tmp);
		if (i >= 0)
		{
			//	ft_putnbr(i);
			ft_putstr(tmp);
			*line = ft_strdupn(tmp, i - 1);
			overflow = ft_strsub(tmp, i, ft_strlen(tmp));
			free(tmp);
			return (1);
		}
		//ft_bzero(buf, BUFF_SIZE);
//		i += j;
	}
	if (overflow)
	{
		*line = ft_strdup(tmp);
		free(tmp);
		overflow = NULL;
		return (1);
	}
	return (0);
}

int	main(int ac, char **av)
{
	int fd;
	char *line;
	int	ret;

	fd = open(av[1], O_RDONLY);
	while ((ret = get_next_line(fd, &line)) == 1)
	{
		(void)ac;
		write(1, "",1);
		//	ft_putendl(line);
	}
	if (ret == -1)
		//	printf("ERROR");
		ft_putendl("Error");
	else if (ret == 0)
		//	printf("\nOK");
		ft_putendl("\nOK");

	return (1);
}
